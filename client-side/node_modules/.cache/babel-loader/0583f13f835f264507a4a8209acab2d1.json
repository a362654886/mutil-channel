{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useChannelsSlice } from \"../pages/HomePage/slice/channelsSlice\";\nimport { selectChannels } from \"../pages/HomePage/slice/channelsSlice/selectors\";\nimport { useEffect } from \"react\";\nexport const useChannels = () => {\n  _s();\n  const {\n    actions: channelsActions\n  } = useChannelsSlice();\n  const dispatch = useDispatch();\n  const channels = useSelector(selectChannels);\n  useEffect(() => {\n    if (channels.totalChannels === 0) {\n      dispatch(channelsActions.getChannels({\n        sortType: \"name\",\n        sortAscend: true,\n        page: 1\n      }));\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return channels;\n};\n_s(useChannels, \"c3WzjQ6BKpJ4OEcOTO3+5x3+uj8=\", false, function () {\n  return [useChannelsSlice, useDispatch, useSelector];\n});","map":{"version":3,"names":["useDispatch","useSelector","useChannelsSlice","selectChannels","useEffect","useChannels","actions","channelsActions","dispatch","channels","totalChannels","getChannels","sortType","sortAscend","page"],"sources":["D:/Github/multi-channel-project/multi-channel-frontend/src/hooks/useClient.ts"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useChannelsSlice } from \"../pages/HomePage/slice/channelsSlice\";\r\nimport { selectChannels } from \"../pages/HomePage/slice/channelsSlice/selectors\";\r\nimport { useEffect } from \"react\";\r\nimport { ChannelsState } from \"types/channelType\";\r\n\r\nexport const useChannels = () => {\r\n  const { actions: channelsActions } = useChannelsSlice();\r\n  const dispatch = useDispatch();\r\n  const channels: ChannelsState = useSelector(selectChannels);\r\n\r\n  useEffect(() => {\r\n    if (channels.totalChannels === 0) {\r\n      dispatch(\r\n        channelsActions.getChannels({\r\n          sortType: \"name\",\r\n          sortAscend: true,\r\n          page: 1,\r\n        })\r\n      );\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return channels;\r\n};\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,uCAAuC;AACxE,SAASC,cAAc,QAAQ,iDAAiD;AAChF,SAASC,SAAS,QAAQ,OAAO;AAGjC,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;EAC/B,MAAM;IAAEC,OAAO,EAAEC;EAAgB,CAAC,GAAGL,gBAAgB,EAAE;EACvD,MAAMM,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,QAAuB,GAAGR,WAAW,CAACE,cAAc,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACd,IAAIK,QAAQ,CAACC,aAAa,KAAK,CAAC,EAAE;MAChCF,QAAQ,CACND,eAAe,CAACI,WAAW,CAAC;QAC1BC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,IAAI;QAChBC,IAAI,EAAE;MACR,CAAC,CAAC,CACH;IACH;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAOL,QAAQ;AACjB,CAAC;AAAC,GAlBWJ,WAAW;EAAA,QACeH,gBAAgB,EACpCF,WAAW,EACIC,WAAW;AAAA"},"metadata":{},"sourceType":"module"}