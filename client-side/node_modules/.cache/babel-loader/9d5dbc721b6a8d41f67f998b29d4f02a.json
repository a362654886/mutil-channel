{"ast":null,"code":"import { notification } from \"antd\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nconst http = axios.create({\n  paramsSerializer: {\n    encode: params => {\n      const {\n        __notification,\n        ...rest\n      } = params;\n      return qs.stringify(rest);\n    }\n  }\n});\nhttp.interceptors.response.use(response => {\n  return response;\n}, error => {\n  notification.error({\n    message: error.message,\n    description: error.message\n  });\n  return Promise.reject(error);\n});\nexport default http;","map":{"version":3,"names":["notification","axios","qs","http","create","paramsSerializer","encode","params","__notification","rest","stringify","interceptors","response","use","error","message","description","Promise","reject"],"sources":["D:/Github/multi-channel-project/multi-channel-frontend/src/tools/http.ts"],"sourcesContent":["import { notification } from \"antd\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nconst http = axios.create({\r\n  paramsSerializer: {\r\n    encode: (params) => {\r\n      const { __notification, ...rest } = params;\r\n      return qs.stringify(rest);\r\n    },\r\n  },\r\n});\r\n\r\nhttp.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    notification.error({\r\n      message: error.message,\r\n      description: error.message,\r\n    });\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default http;\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,MAAM;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,IAAI;AAEnB,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EACxBC,gBAAgB,EAAE;IAChBC,MAAM,EAAGC,MAAM,IAAK;MAClB,MAAM;QAAEC,cAAc;QAAE,GAAGC;MAAK,CAAC,GAAGF,MAAM;MAC1C,OAAOL,EAAE,CAACQ,SAAS,CAACD,IAAI,CAAC;IAC3B;EACF;AACF,CAAC,CAAC;AAEFN,IAAI,CAACQ,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAE,KAAK,IAAK;EACTd,YAAY,CAACc,KAAK,CAAC;IACjBC,OAAO,EAAED,KAAK,CAACC,OAAO;IACtBC,WAAW,EAAEF,KAAK,CAACC;EACrB,CAAC,CAAC;EAEF,OAAOE,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CAAC,CACF;AAED,eAAeX,IAAI"},"metadata":{},"sourceType":"module"}