{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\multi-channel-project\\\\multi-channel-frontend\\\\src\\\\pages\\\\HomePage\\\\components\\\\NewChannel\\\\NewChannel.tsx\",\n  _s = $RefreshSig$();\nimport { Input, Modal } from \"antd\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewChannel = _ref => {\n  _s();\n  let {\n    addNewChannel,\n    close\n  } = _ref;\n  const [channelName, setChannelName] = useState(\"\");\n  const addChannel = () => {\n    addNewChannel({\n      _id: `${channelName}${new Date().valueOf()}`,\n      name: channelName\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Add New Channel\",\n    open: true,\n    onOk: addChannel,\n    onCancel: close,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onChange: v => setChannelName(v.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(NewChannel, \"TDxOi0bqvOqnKJ88EyRDOousPjg=\");\n_c = NewChannel;\nexport default NewChannel;\nvar _c;\n$RefreshReg$(_c, \"NewChannel\");","map":{"version":3,"names":["Input","Modal","React","useState","NewChannel","addNewChannel","close","channelName","setChannelName","addChannel","_id","Date","valueOf","name","v","target","value"],"sources":["D:/Github/multi-channel-project/multi-channel-frontend/src/pages/HomePage/components/NewChannel/NewChannel.tsx"],"sourcesContent":["import { Input, Modal } from \"antd\";\r\nimport * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Channel } from \"../../../../types/channelType\";\r\n\r\ninterface IProps {\r\n  addNewChannel: (channel: Channel) => void;\r\n  close: () => void;\r\n}\r\n\r\nconst NewChannel = ({ addNewChannel, close }: IProps): JSX.Element => {\r\n  const [channelName, setChannelName] = useState<string>(\"\");\r\n  const addChannel = () => {\r\n    addNewChannel({\r\n      _id: `${channelName}${new Date().valueOf()}`,\r\n      name: channelName,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Add New Channel\"\r\n      open={true}\r\n      onOk={addChannel}\r\n      onCancel={close}\r\n    >\r\n      <h3>Name:</h3>\r\n      <Input onChange={(v) => setChannelName(v.target.value)} />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewChannel;\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,KAAK,QAAQ,MAAM;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAQjC,MAAMC,UAAU,GAAG,QAAmD;EAAA;EAAA,IAAlD;IAAEC,aAAa;IAAEC;EAAc,CAAC;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAMM,UAAU,GAAG,MAAM;IACvBJ,aAAa,CAAC;MACZK,GAAG,EAAG,GAAEH,WAAY,GAAE,IAAII,IAAI,EAAE,CAACC,OAAO,EAAG,EAAC;MAC5CC,IAAI,EAAEN;IACR,CAAC,CAAC;EACJ,CAAC;EAED,oBACE,QAAC,KAAK;IACJ,KAAK,EAAC,iBAAiB;IACvB,IAAI,EAAE,IAAK;IACX,IAAI,EAAEE,UAAW;IACjB,QAAQ,EAAEH,KAAM;IAAA,wBAEhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd,QAAC,KAAK;MAAC,QAAQ,EAAGQ,CAAC,IAAKN,cAAc,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpD;AAEZ,CAAC;AAAC,GApBIZ,UAAU;AAAA,KAAVA,UAAU;AAsBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}