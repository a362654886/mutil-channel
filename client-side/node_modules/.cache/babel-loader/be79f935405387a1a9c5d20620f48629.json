{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\multi-channel-project\\\\multi-channel-frontend\\\\src\\\\pages\\\\HomePage\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Collapse, Pagination } from \"antd\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PAGE_SIZE } from \"../../common/const\";\nimport { useChannels } from \"../../hooks/useClient\";\nimport { useChannelsSlice } from \"./slice/channelsSlice\";\nimport { selectChannels } from \"./slice/channelsSlice/selectors\";\nimport { StyledHMessageDiv, StyledHomePageDiv } from \"./style\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport NewChannel from \"./components/NewChannel/NewChannel\";\nimport NewMessage from \"./components/NewMessage/NewMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Panel\n} = Collapse;\nconst MainPage = () => {\n  _s();\n  const {\n    actions: channelsActions\n  } = useChannelsSlice();\n  const channels = useSelector(selectChannels);\n  const allChannels = useChannels();\n  const dispatch = useDispatch();\n  const [newChannelVisible, setNewChannelVisible] = useState(false);\n  const [newMessageVisible, setNewMessageVisible] = useState(false);\n  const [channelId, setChannelId] = useState(\"\");\n  const addNewChannel = channel => {\n    dispatch(channelsActions.addChannel(channel));\n  };\n  const addNewMessage = message => {\n    dispatch(channelsActions.addMessage({\n      channelId: channelId,\n      message: message\n    }));\n  };\n  const deleteMessage = (deleteChannelId, messageId) => {\n    dispatch(channelsActions.deleteMessage({\n      channelId: deleteChannelId,\n      messageId: messageId\n    }));\n  };\n  const filterByPage = page => {\n    const newFilterPara = {\n      sortType: channels.filterPara.sortType,\n      sortAscend: channels.filterPara.sortAscend,\n      page: page\n    };\n    dispatch(channelsActions.getChannels(newFilterPara));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledHomePageDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"multi-channel forum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setNewChannelVisible(true),\n        children: \"Add New Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        defaultActiveKey: [\"1\"],\n        onChange: v => {\n          console.log(v);\n        },\n        children: allChannels.channels.map((channel, index) => {\n          return /*#__PURE__*/_jsxDEV(Panel, {\n            header: channel.name,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setNewMessageVisible(true);\n                setChannelId(channel._id);\n              },\n              children: \"Add New Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), channel.messages && channel.messages.map(message => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(StyledHMessageDiv, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: message.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: new Date(message.createAt).toISOString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                    onClick: () => deleteMessage(channel._id, message._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.context\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 25\n                }, this)]\n              }, message._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 23\n              }, this);\n            })]\n          }, `${channel._id}${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        current: channels.filterPara.page,\n        total: channels.totalChannels,\n        pageSize: PAGE_SIZE,\n        onChange: v => filterByPage(v)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), newChannelVisible && /*#__PURE__*/_jsxDEV(NewChannel, {\n      addNewChannel: channel => addNewChannel(channel),\n      close: () => setNewChannelVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), newMessageVisible && /*#__PURE__*/_jsxDEV(NewMessage, {\n      channelId: channelId,\n      addNewMessage: message => addNewMessage(message),\n      close: () => setNewMessageVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MainPage, \"jHUVjAnqL0+Tlzn96AzEWfhtB8E=\", false, function () {\n  return [useChannelsSlice, useSelector, useChannels, useDispatch];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["Button","Collapse","Pagination","React","useState","useDispatch","useSelector","PAGE_SIZE","useChannels","useChannelsSlice","selectChannels","StyledHMessageDiv","StyledHomePageDiv","DeleteOutlined","NewChannel","NewMessage","Panel","MainPage","actions","channelsActions","channels","allChannels","dispatch","newChannelVisible","setNewChannelVisible","newMessageVisible","setNewMessageVisible","channelId","setChannelId","addNewChannel","channel","addChannel","addNewMessage","message","addMessage","deleteMessage","deleteChannelId","messageId","filterByPage","page","newFilterPara","sortType","filterPara","sortAscend","getChannels","v","console","log","map","index","name","_id","messages","title","Date","createAt","toISOString","context","totalChannels"],"sources":["D:/Github/multi-channel-project/multi-channel-frontend/src/pages/HomePage/index.tsx"],"sourcesContent":["import { Button, Collapse, Pagination } from \"antd\";\r\nimport * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PAGE_SIZE } from \"../../common/const\";\r\nimport { useChannels } from \"../../hooks/useClient\";\r\nimport { Channel } from \"../../types/channelType\";\r\nimport { Message } from \"../../types/messageType\";\r\nimport { useChannelsSlice } from \"./slice/channelsSlice\";\r\nimport { selectChannels } from \"./slice/channelsSlice/selectors\";\r\nimport { StyledHMessageDiv, StyledHomePageDiv } from \"./style\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport NewChannel from \"./components/NewChannel/NewChannel\";\r\nimport NewMessage from \"./components/NewMessage/NewMessage\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst MainPage = (): JSX.Element => {\r\n  const { actions: channelsActions } = useChannelsSlice();\r\n  const channels = useSelector(selectChannels);\r\n\r\n  const allChannels = useChannels();\r\n  const dispatch = useDispatch();\r\n\r\n  const [newChannelVisible, setNewChannelVisible] = useState<boolean>(false);\r\n  const [newMessageVisible, setNewMessageVisible] = useState<boolean>(false);\r\n  const [channelId, setChannelId] = useState<string>(\"\");\r\n\r\n  const addNewChannel = (channel: Channel) => {\r\n    dispatch(channelsActions.addChannel(channel));\r\n  };\r\n\r\n  const addNewMessage = (message: Message) => {\r\n    dispatch(\r\n      channelsActions.addMessage({\r\n        channelId: channelId,\r\n        message: message,\r\n      })\r\n    );\r\n  };\r\n\r\n  const deleteMessage = (deleteChannelId: string, messageId: string) => {\r\n    dispatch(\r\n      channelsActions.deleteMessage({\r\n        channelId: deleteChannelId,\r\n        messageId: messageId,\r\n      })\r\n    );\r\n  };\r\n\r\n  const filterByPage = (page: number) => {\r\n    const newFilterPara = {\r\n      sortType: channels.filterPara.sortType,\r\n      sortAscend: channels.filterPara.sortAscend,\r\n      page: page,\r\n    };\r\n    dispatch(channelsActions.getChannels(newFilterPara));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledHomePageDiv>\r\n        <h1>multi-channel forum</h1>\r\n        <Button onClick={() => setNewChannelVisible(true)}>\r\n          Add New Channel\r\n        </Button>\r\n        <Collapse\r\n          defaultActiveKey={[\"1\"]}\r\n          onChange={(v) => {\r\n            console.log(v);\r\n          }}\r\n        >\r\n          {allChannels.channels.map((channel, index) => {\r\n            return (\r\n              <Panel header={channel.name} key={`${channel._id}${index}`}>\r\n                <Button\r\n                  onClick={() => {\r\n                    setNewMessageVisible(true);\r\n                    setChannelId(channel._id as string);\r\n                  }}\r\n                >\r\n                  Add New Message\r\n                </Button>\r\n                {channel.messages &&\r\n                  channel.messages.map((message) => {\r\n                    return (\r\n                      <div key={message._id}>\r\n                        <StyledHMessageDiv>\r\n                          <h6>{message.title}</h6>\r\n                          <p>{new Date(message.createAt).toISOString()}</p>\r\n                          <DeleteOutlined\r\n                            onClick={() =>\r\n                              deleteMessage(\r\n                                channel._id as string,\r\n                                message._id as string\r\n                              )\r\n                            }\r\n                          />\r\n                        </StyledHMessageDiv>\r\n                        <p>{message.context}</p>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </Panel>\r\n            );\r\n          })}\r\n        </Collapse>\r\n        <Pagination\r\n          current={channels.filterPara.page}\r\n          total={channels.totalChannels}\r\n          pageSize={PAGE_SIZE}\r\n          onChange={(v) => filterByPage(v)}\r\n        />\r\n      </StyledHomePageDiv>\r\n      {newChannelVisible && (\r\n        <NewChannel\r\n          addNewChannel={(channel: Channel) => addNewChannel(channel)}\r\n          close={() => setNewChannelVisible(false)}\r\n        />\r\n      )}\r\n      {newMessageVisible && (\r\n        <NewMessage\r\n          channelId={channelId}\r\n          addNewMessage={(message: Message) => addNewMessage(message)}\r\n          close={() => setNewMessageVisible(false)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}